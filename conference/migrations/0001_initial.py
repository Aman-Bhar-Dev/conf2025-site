# Generated by Django 5.2.3 on 2025-07-15 21:02

import cloudinary_storage.storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AbstractSubmission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_author", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                (
                    "abstract_file",
                    models.FileField(
                        storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(),
                        upload_to="abstracts/",
                    ),
                ),
                (
                    "paper_id",
                    models.CharField(
                        blank=True, editable=False, max_length=15, unique=True
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                (
                    "institute",
                    models.CharField(
                        choices=[
                            ("Assam University, Silchar", "Assam University, Silchar"),
                            (
                                "Royal Thimphu College, Bhutan",
                                "Royal Thimphu College, Bhutan",
                            ),
                            ("Others", "Others"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "custom_institute",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "designation",
                    models.CharField(
                        choices=[
                            ("Student", "Student"),
                            ("Research Scholar", "Research Scholar"),
                            ("Professor", "Professor"),
                            ("Associate Professor", "Associate Professor"),
                            ("Assistant Professor", "Assistant Professor"),
                            ("Corporate", "Corporate"),
                        ],
                        max_length=50,
                    ),
                ),
                ("keywords", models.TextField()),
                (
                    "full_paper",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(),
                        upload_to="full_papers/",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("APPROVED", "Approved"),
                            ("REJECTED", "Rejected"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("submitted_on", models.DateTimeField(auto_now_add=True)),
                (
                    "mode_of_participation",
                    models.CharField(
                        choices=[("Online", "Online"), ("Offline", "Offline")],
                        default="Offline",
                        max_length=10,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Academician", "Academician"),
                            ("Corporate", "Corporate"),
                            ("Student", "Research Scholar / Student"),
                            ("NonPresenter", "Non-presenter / Listener"),
                            (
                                "International",
                                "International (Non-Indian, Non-Bhutanese)",
                            ),
                        ],
                        default="Student",
                        max_length=30,
                    ),
                ),
                ("payment_amount", models.IntegerField(default=0)),
                ("payment_status", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Abstract Submission",
                "verbose_name_plural": "Abstract Submissions",
                "ordering": ["paper_id"],
            },
        ),
        migrations.CreateModel(
            name="CoAuthor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("affiliation", models.CharField(max_length=200)),
                (
                    "designation",
                    models.CharField(
                        choices=[
                            ("Student", "Student"),
                            ("Research Scholar", "Research Scholar"),
                            ("Assistant Professor", "Assistant Professor"),
                            ("Associate Professor", "Associate Professor"),
                            ("Professor", "Professor"),
                            ("Corporate", "Corporate"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Academician", "Academician"),
                            ("Corporate", "Corporate"),
                            ("Student", "Research Scholar / Student"),
                            ("NonPresenter", "Non-presenter / Listener"),
                            (
                                "International",
                                "International (Non-Indian, Non-Bhutanese)",
                            ),
                        ],
                        default="Student",
                        max_length=30,
                    ),
                ),
                (
                    "submission",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coauthors",
                        to="conference.abstractsubmission",
                    ),
                ),
            ],
            options={
                "ordering": ["last_name", "first_name"],
            },
        ),
        migrations.CreateModel(
            name="FinalRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "author_mode",
                    models.CharField(
                        choices=[("Online", "Online"), ("Offline", "Offline")],
                        max_length=10,
                    ),
                ),
                ("total_amount", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "submission",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="conference.abstractsubmission",
                    ),
                ),
                ("author_address", models.TextField(default="N/A")),
                ("author_contact", models.CharField(default="N/A", max_length=20)),
                ("author_designation", models.CharField(default="N/A", max_length=100)),
                (
                    "author_gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        default="N/A",
                        max_length=10,
                    ),
                ),
                (
                    "author_id_proof",
                    models.FileField(
                        storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(),
                        upload_to="id_proofs/",
                    ),
                ),
                ("author_name", models.CharField(default="N/A", max_length=255)),
                (
                    "payment_screenshot",
                    models.ImageField(
                        blank=True,
                        null=True,
                        storage=cloudinary_storage.storage.RawMediaCloudinaryStorage(),
                        upload_to="payment_screenshots/",
                    ),
                ),
                ("payment_verified", models.BooleanField(default=False)),
                (
                    "presenter_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("fee_breakdown", models.TextField(blank=True)),
                ("transaction_date", models.DateField(blank=True, null=True)),
                (
                    "transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("transaction_time", models.TimeField(blank=True, null=True)),
                (
                    "selected_theme",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Society, Equity, Transformation & Social Work",
                                "Society, Equity, Transformation & Social Work",
                            ),
                            (
                                "Knowledge, Education & Human Development",
                                "Knowledge, Education & Human Development",
                            ),
                            (
                                "Politics, Governance, Public Policy, and Political Science",
                                "Politics, Governance, Public Policy, and Political Science",
                            ),
                            (
                                "Economy, Technology & Social Impact",
                                "Economy, Technology & Social Impact",
                            ),
                            (
                                "Culture, Identity & Globalization",
                                "Culture, Identity & Globalization",
                            ),
                            (
                                "Environment, Climate & Sustainability",
                                "Environment, Climate & Sustainability",
                            ),
                            (
                                "Business, Commerce and Business Sustainability",
                                "Business, Commerce and Business Sustainability",
                            ),
                            (
                                "General Social Science and Topics Not Falling Under the Above Categories",
                                "General Social Science and Topics Not Falling Under the Above Categories",
                            ),
                        ],
                        max_length=200,
                        null=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("institute", models.CharField(blank=True, max_length=255)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FinalParticipant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("CoAuthor", "Co-Author"), ("Visitor", "Visitor")],
                        max_length=20,
                    ),
                ),
                (
                    "mode",
                    models.CharField(
                        choices=[("Online", "Online"), ("Offline", "Offline")],
                        max_length=10,
                    ),
                ),
                (
                    "registration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="participants",
                        to="conference.finalregistration",
                    ),
                ),
                ("address", models.TextField(default="N/A")),
                ("contact", models.CharField(default="N/A", max_length=20)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        default="N/A",
                        max_length=10,
                    ),
                ),
                (
                    "id_proof",
                    models.FileField(blank=True, null=True, upload_to="id_proofs/"),
                ),
                (
                    "affiliation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisitorRegistration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("contact", models.CharField(max_length=15)),
                ("address", models.TextField()),
                (
                    "id_proof_type",
                    models.CharField(
                        choices=[("passport", "Passport"), ("voter_id", "Voter ID")],
                        max_length=20,
                    ),
                ),
                ("id_proof_file", models.FileField(upload_to="identity_proofs/")),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Pending", "Pending"),
                            ("Approved", "Approved"),
                            ("Rejected", "Rejected"),
                        ],
                        default="Pending",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdditionalVisitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("contact", models.CharField(max_length=15)),
                (
                    "id_proof_type",
                    models.CharField(
                        choices=[("passport", "Passport"), ("voter_id", "Voter ID")],
                        max_length=20,
                    ),
                ),
                ("id_proof_file", models.FileField(upload_to="identity_proofs/")),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_visitors",
                        to="conference.visitorregistration",
                    ),
                ),
            ],
        ),
    ]
